// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const SequencerFeeVaultStorageLayoutJSON = "{\"storage\":[{\"astId\":26475,\"contract\":\"contracts/L2/SequencerFeeVault.sol:SequencerFeeVault\",\"label\":\"recipient\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_address\"}],\"types\":{\"t_address\":{\"encoding\":\"inplace\",\"label\":\"address\",\"numberOfBytes\":\"20\"}}}"

var SequencerFeeVaultStorageLayout = new(solc.StorageLayout)

var SequencerFeeVaultDeployedBin = "0x60806040526004361061005e5760003560e01c806366d003ac1161004357806366d003ac146100ac578063d3e5792b146100fe578063d4ff92181461014057600080fd5b80633ccfd60b1461006a57806354fd4d501461008157600080fd5b3661006557005b600080fd5b34801561007657600080fd5b5061007f61016b565b005b34801561008d57600080fd5b50610096610357565b6040516100a391906105b1565b60405180910390f35b3480156100b857600080fd5b506000546100d99073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100a3565b34801561010a57600080fd5b506101327f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020016100a3565b34801561014c57600080fd5b5060005473ffffffffffffffffffffffffffffffffffffffff166100d9565b7f0000000000000000000000000000000000000000000000000000000000000000471015610245576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f4665655661756c743a207769746864726177616c20616d6f756e74206d75737460448201527f2062652067726561746572207468616e206d696e696d756d207769746864726160648201527f77616c20616d6f756e7400000000000000000000000000000000000000000000608482015260a40160405180910390fd5b6000805460408051602081018252928352517fe11013dd00000000000000000000000000000000000000000000000000000000815247927342000000000000000000000000000000000000109263e11013dd9285926102c29273ffffffffffffffffffffffffffffffffffffffff1691614e2091906004016105cb565b6000604051808303818588803b1580156102db57600080fd5b505af11580156102ef573d6000803e3d6000fd5b50506000546040805186815273ffffffffffffffffffffffffffffffffffffffff909216602083015233908201527fc8a211cc64b6ed1b50595a9fcb1932b6d1e5a6e8ef15b60e5b1f988ea9086bba9350606001915061034c9050565b60405180910390a150565b60606103827f00000000000000000000000000000000000000000000000000000000000000006103fa565b6103ab7f00000000000000000000000000000000000000000000000000000000000000006103fa565b6103d47f00000000000000000000000000000000000000000000000000000000000000006103fa565b6040516020016103e69392919061060f565b604051602081830303815290604052905090565b60608160000361043d57505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b81156104675780610451816106b4565b91506104609050600a8361071b565b9150610441565b60008167ffffffffffffffff8111156104825761048261072f565b6040519080825280601f01601f1916602001820160405280156104ac576020820181803683370190505b5090505b841561052f576104c160018361075e565b91506104ce600a86610775565b6104d9906030610789565b60f81b8183815181106104ee576104ee6107a1565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350610528600a8661071b565b94506104b0565b949350505050565b60005b8381101561055257818101518382015260200161053a565b83811115610561576000848401525b50505050565b6000815180845261057f816020860160208601610537565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006105c46020830184610567565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8416815263ffffffff831660208201526060604082015260006106066060830184610567565b95945050505050565b60008451610621818460208901610537565b80830190507f2e00000000000000000000000000000000000000000000000000000000000000808252855161065d816001850160208a01610537565b60019201918201528351610678816002840160208801610537565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036106e5576106e5610685565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261072a5761072a6106ec565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008282101561077057610770610685565b500390565b600082610784576107846106ec565b500690565b6000821982111561079c5761079c610685565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(SequencerFeeVaultStorageLayoutJSON), SequencerFeeVaultStorageLayout); err != nil {
		panic(err)
	}

	layouts["SequencerFeeVault"] = SequencerFeeVaultStorageLayout
	deployedBytecodes["SequencerFeeVault"] = SequencerFeeVaultDeployedBin
}
