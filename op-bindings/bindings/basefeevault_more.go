// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package bindings

import (
	"encoding/json"

	"github.com/ethereum-optimism/optimism/op-bindings/solc"
)

const BaseFeeVaultStorageLayoutJSON = "{\"storage\":[{\"astId\":26475,\"contract\":\"contracts/L2/BaseFeeVault.sol:BaseFeeVault\",\"label\":\"recipient\",\"offset\":0,\"slot\":\"0\",\"type\":\"t_address\"}],\"types\":{\"t_address\":{\"encoding\":\"inplace\",\"label\":\"address\",\"numberOfBytes\":\"20\"}}}"

var BaseFeeVaultStorageLayout = new(solc.StorageLayout)

var BaseFeeVaultDeployedBin = "0x6080604052600436106100435760003560e01c80633ccfd60b1461004f57806354fd4d501461006657806366d003ac14610091578063d3e5792b146100e357600080fd5b3661004a57005b600080fd5b34801561005b57600080fd5b50610064610125565b005b34801561007257600080fd5b5061007b610311565b604051610088919061056b565b60405180910390f35b34801561009d57600080fd5b506000546100be9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610088565b3480156100ef57600080fd5b506101177f000000000000000000000000000000000000000000000000000000000000000081565b604051908152602001610088565b7f00000000000000000000000000000000000000000000000000000000000000004710156101ff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f4665655661756c743a207769746864726177616c20616d6f756e74206d75737460448201527f2062652067726561746572207468616e206d696e696d756d207769746864726160648201527f77616c20616d6f756e7400000000000000000000000000000000000000000000608482015260a40160405180910390fd5b6000805460408051602081018252928352517fe11013dd00000000000000000000000000000000000000000000000000000000815247927342000000000000000000000000000000000000109263e11013dd92859261027c9273ffffffffffffffffffffffffffffffffffffffff1691614e209190600401610585565b6000604051808303818588803b15801561029557600080fd5b505af11580156102a9573d6000803e3d6000fd5b50506000546040805186815273ffffffffffffffffffffffffffffffffffffffff909216602083015233908201527fc8a211cc64b6ed1b50595a9fcb1932b6d1e5a6e8ef15b60e5b1f988ea9086bba935060600191506103069050565b60405180910390a150565b606061033c7f00000000000000000000000000000000000000000000000000000000000000006103b4565b6103657f00000000000000000000000000000000000000000000000000000000000000006103b4565b61038e7f00000000000000000000000000000000000000000000000000000000000000006103b4565b6040516020016103a0939291906105c9565b604051602081830303815290604052905090565b6060816000036103f757505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115610421578061040b8161066e565b915061041a9050600a836106d5565b91506103fb565b60008167ffffffffffffffff81111561043c5761043c6106e9565b6040519080825280601f01601f191660200182016040528015610466576020820181803683370190505b5090505b84156104e95761047b600183610718565b9150610488600a8661072f565b610493906030610743565b60f81b8183815181106104a8576104a861075b565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053506104e2600a866106d5565b945061046a565b949350505050565b60005b8381101561050c5781810151838201526020016104f4565b8381111561051b576000848401525b50505050565b600081518084526105398160208601602086016104f1565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061057e6020830184610521565b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8416815263ffffffff831660208201526060604082015260006105c06060830184610521565b95945050505050565b600084516105db8184602089016104f1565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551610617816001850160208a016104f1565b600192019182015283516106328160028401602088016104f1565b0160020195945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361069f5761069f61063f565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000826106e4576106e46106a6565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008282101561072a5761072a61063f565b500390565b60008261073e5761073e6106a6565b500690565b600082198211156107565761075661063f565b500190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fdfea164736f6c634300080f000a"

func init() {
	if err := json.Unmarshal([]byte(BaseFeeVaultStorageLayoutJSON), BaseFeeVaultStorageLayout); err != nil {
		panic(err)
	}

	layouts["BaseFeeVault"] = BaseFeeVaultStorageLayout
	deployedBytecodes["BaseFeeVault"] = BaseFeeVaultDeployedBin
}
